@model IEnumerable<DreamCMS.ModelsAdmin.tbMenu>

@{
    ViewBag.Title = "Bảng cài đặt Menu tổng thể";
    ViewBag.Description = "Được xuất ra từ danh sách các controller và action con tương ứng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<p>
    @Html.ActionLink(DTextHTML.Create, "Create", null, new { @class="btn btn-success" })
    @Html.ActionLink("Sắp xếp Menu", "SortMenu", null, new { @class = "btn btn-info" })

</p>
<table class="table table-hover" id="tablesort">
    <thead>
        <tr>
            <th>
                RootName
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MenuName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Controller)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Action)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Area)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsController)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsMenu)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDisable)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item.MenuName == "Root") { continue; }

            <tr @if (item.tbMenuParrent != null) { if (item.tbMenuParrent.MenuName == "Root") { @: class="danger"
                                    } }>
                <td>
                    @Html.DisplayFor(modelItem => item.tbMenuParrent.MenuName)
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.ClassIcon))
                    { <i class="@item.ClassIcon"></i> }

                    <a href="#" class="xedit-menuname" data-pk="@item.tbMenuId" data-id="menu@(item.tbMenuId)" data-type="text" data-placeholder="Tên menu bắt buộc" data-original-title="Nhập tên menu">
                        @Html.DisplayFor(modelItem => item.MenuName)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Controller)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Action)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Area)
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.IsController, new { @class = "make-switch switch-mini", data_on = "success", data_menuid = item.tbMenuId, data_strtype = "ctrl" })
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.IsMenu, new { @class = "make-switch switch-mini", data_on = "success", data_menuid = item.tbMenuId, data_strtype = "mn" })
                </td>
                <td>
                    @Html.CheckBoxFor(modelItem => item.IsDisable, new { @class = "make-switch switch-mini", data_on = "success", data_menuid = item.tbMenuId, data_strtype = "dis" })
                </td>
                <td>
                    @if (item.MenuName != "Root")
                    {
                        <a href="@Url.Action("Edit", new { id = item.tbMenuId })" class="btn btn-xs green">@DTextHTML.Edit</a>
                        @*<a href="@Url.Action("Details", new { id = item.tbMenuId })" class="btn btn-xs yellow">Details</a>*@
                        <a href="@Url.Action("Delete", new { id = item.tbMenuId })" class="btn btn-xs red">@DTextHTML.Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>


@section styles{
    <link rel="stylesheet" type="text/css" href="~/Areas/Admin/assets/plugins/bootstrap-switch/css/bootstrap-switch.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Areas/Admin/assets/plugins/bootstrap-toastr/toastr.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Areas/Admin/assets/plugins/bootstrap-editable/bootstrap-editable/css/bootstrap-editable.css" />
    <link rel="stylesheet" type="text/css" href="~/Areas/Admin/assets/plugins/data-tables/DT_bootstrap.css" />
}
@section scripts{
    <script src="~/Areas/Admin/assets/plugins/bootstrap-switch/js/bootstrap-switch.min.js" type="text/javascript"></script>
    <script src="~/Areas/Admin/assets/plugins/bootstrap-toastr/toastr.min.js"></script>
    <script src="~/Areas/Admin/assets/plugins/bootstrap-editable/bootstrap-editable/js/bootstrap-editable.min.js"></script>
    <script src="~/Areas/Admin/assets/plugins/data-tables/jquery.dataTables.min.js"></script>
    <script src="~/Areas/Admin/assets/plugins/data-tables/DT_bootstrap.js"></script>
    <script>
        $(document).ready(function () {
            toastr.options = {
                "closeButton": true,
                "positionClass": "toast-top-right",
                "timeOut": "1000",
                "extendedTimeOut": "1000",
            }

            var isSecond = false;

            $('body').on("change", 'input[type="checkbox"]', function () {
                if (!isSecond) { isSecond = true; return } else { isSecond = false; }
                // do something....
                var menuid = $(this).attr('data-menuid');
                var val = $(this).is(":checked");
                var strtype = $(this).attr('data-strtype');
                $.post("/Admin/Menus/UpdateMenuOneBool", { "menuid": menuid, "val": val, "strtype": strtype })
                .done(function(data){
                    console.log(data);
                    toastr[(data.result?"success":"warning")](data.msg, "Thông báo");
                })
                .error(function(){
                    toastr["danger"]("Thao tác không thành công!", "Thông báo");
                });
            });

            $.fn.editable.defaults.inputclass = 'form-control';

            $('.xedit-menuname').editable({
                //mode: 'inline',
                url: '/Admin/Menus/UpdateMenuOneName',
                validate: function (value) {
                    if ($.trim(value) == '') return 'Tên menu là bắt buộc!';
                },
                error: function (response, newValue) {
                    return response.statusText;
                }
            });

            // begin first table
            $('#tablesort').dataTable({
                "aoColumns": [
                  null,
                  null,
                  null,
                  null,
                  null,
                  { "bSortable": false },
                  { "bSortable": false },
                  { "bSortable": false },
                  { "bSortable": false }
                ],
                "aLengthMenu": [
                    [20, 50, 100, -1],
                    [20, 50, 100, "All"] // change per page values here
                ],
                // set the initial value
                "iDisplayLength": 20,
                "sPaginationType": "bootstrap",
                "oLanguage": {
                    "sLengthMenu": "_MENU_ records",
                    "oPaginate": {
                        "sPrevious": "Prev",
                        "sNext": "Next"
                    }
                }
            });

            $('#tablesort_wrapper .dataTables_length select').addClass("form-control input-xsmall");

        });
    </script>
}